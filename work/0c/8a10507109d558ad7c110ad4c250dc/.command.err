Proceeding with single-core trimming (user-defined)
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 4.4
single-core operation.
No quality encoding type selected. Assuming that the data provided uses Sanger encoded Phred scores (default)



AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> WT_REP2_1.fastq.gz <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
Illumina	2049	AGATCGGAAGAGC	50000	4.10
Nextera	0	CTGTCTCTTATA	50000	0.00
smallRNA	0	TGGAATTCTCGG	50000	0.00
Using Illumina adapter for trimming (count: 2049). Second best hit was Nextera (count: 0)

Writing report to 'WT_REP2_1.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: WT_REP2_1.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.2
Cutadapt version: 4.4
Number of cores used for trimming: 1
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '-t 2'
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j 1
Writing final adapter and quality trimmed output to WT_REP2_1_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file WT_REP2_1.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.10.6
Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC WT_REP2_1.fastq.gz
Processing single-end reads on 1 core ...
Finished in 1.581 s (31.612 µs/read; 1.90 M reads/minute).

=== Summary ===

Total reads processed:                  50,000
Reads with adapters:                    20,412 (40.8%)
Reads written (passing filters):        50,000 (100.0%)

Total basepairs processed:     5,050,000 bp
Quality-trimmed:                  10,391 bp (0.2%)
Total written (filtered):      4,953,250 bp (98.1%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 20412 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 27.0%
  C: 23.6%
  G: 24.9%
  T: 24.5%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	11807	12500.0	0	11807
2	3269	3125.0	0	3269
3	1029	781.2	0	1029
4	515	195.3	0	515
5	267	48.8	0	267
6	243	12.2	0	243
7	247	3.1	0	247
8	228	0.8	0	228
9	167	0.2	0	167
10	216	0.0	1	198 18
11	169	0.0	1	166 3
12	161	0.0	1	156 5
13	137	0.0	1	132 5
14	136	0.0	1	135 1
15	151	0.0	1	144 7
16	135	0.0	1	134 1
17	125	0.0	1	121 4
18	110	0.0	1	109 1
19	101	0.0	1	97 4
20	109	0.0	1	106 3
21	91	0.0	1	84 7
22	77	0.0	1	75 2
23	83	0.0	1	79 4
24	78	0.0	1	76 2
25	90	0.0	1	87 3
26	52	0.0	1	51 1
27	67	0.0	1	67
28	51	0.0	1	48 3
29	52	0.0	1	51 1
30	50	0.0	1	50
31	33	0.0	1	28 5
32	33	0.0	1	32 1
33	26	0.0	1	25 1
34	40	0.0	1	39 1
35	32	0.0	1	32
36	26	0.0	1	25 1
37	19	0.0	1	19
38	22	0.0	1	22
39	24	0.0	1	23 1
40	12	0.0	1	12
41	29	0.0	1	27 2
42	7	0.0	1	6 1
43	9	0.0	1	9
44	8	0.0	1	7 1
45	9	0.0	1	9
46	7	0.0	1	7
47	10	0.0	1	10
48	6	0.0	1	6
49	11	0.0	1	11
50	3	0.0	1	3
51	6	0.0	1	6
52	2	0.0	1	1 1
53	5	0.0	1	5
54	4	0.0	1	4
55	2	0.0	1	2
56	3	0.0	1	3
57	4	0.0	1	4
58	2	0.0	1	2
59	1	0.0	1	1
60	1	0.0	1	1
61	2	0.0	1	2
62	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: WT_REP2_1.fastq.gz
=============================================
50000 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Writing report to 'WT_REP2_2.fastq.gz_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: WT_REP2_2.fastq.gz
Trimming mode: paired-end
Trim Galore version: 0.6.2
Cutadapt version: 4.4
Number of cores used for trimming: 1
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length for both reads before a sequence pair gets removed: 20 bp
Running FastQC on the data once trimming has completed
Running FastQC with the following extra arguments: '-t 2'
Output file(s) will be GZIP compressed

Cutadapt seems to be fairly up-to-date (version 4.4). Setting -j -j 1
Writing final adapter and quality trimmed output to WT_REP2_2_trimmed.fq.gz


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file WT_REP2_2.fastq.gz <<< 
This is cutadapt 4.4 with Python 3.10.6
Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC WT_REP2_2.fastq.gz
Processing single-end reads on 1 core ...
Finished in 1.498 s (29.956 µs/read; 2.00 M reads/minute).

=== Summary ===

Total reads processed:                  50,000
Reads with adapters:                    22,442 (44.9%)
Reads written (passing filters):        50,000 (100.0%)

Total basepairs processed:     5,050,000 bp
Quality-trimmed:                  31,792 bp (0.6%)
Total written (filtered):      4,930,261 bp (97.6%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 22442 times

Minimum overlap: 1
No. of allowed errors:
1-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 35.0%
  C: 27.4%
  G: 19.8%
  T: 17.8%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	13977	12500.0	0	13977
2	2882	3125.0	0	2882
3	1331	781.2	0	1331
4	452	195.3	0	452
5	308	48.8	0	308
6	238	12.2	0	238
7	245	3.1	0	245
8	231	0.8	0	231
9	173	0.2	0	168 5
10	197	0.0	1	193 4
11	168	0.0	1	162 6
12	169	0.0	1	166 3
13	120	0.0	1	114 6
14	173	0.0	1	168 5
15	127	0.0	1	118 9
16	131	0.0	1	128 3
17	153	0.0	1	147 6
18	78	0.0	1	76 2
19	116	0.0	1	112 4
20	112	0.0	1	107 5
21	68	0.0	1	68
22	78	0.0	1	76 2
23	81	0.0	1	76 5
24	81	0.0	1	80 1
25	81	0.0	1	81
26	62	0.0	1	60 2
27	62	0.0	1	59 3
28	59	0.0	1	58 1
29	50	0.0	1	48 2
30	51	0.0	1	46 5
31	26	0.0	1	24 2
32	31	0.0	1	30 1
33	28	0.0	1	26 2
34	43	0.0	1	40 3
35	30	0.0	1	29 1
36	25	0.0	1	25
37	19	0.0	1	19
38	21	0.0	1	21
39	23	0.0	1	23
40	14	0.0	1	12 2
41	18	0.0	1	18
42	11	0.0	1	11
43	13	0.0	1	13
44	7	0.0	1	7
45	9	0.0	1	9
46	8	0.0	1	8
47	10	0.0	1	10
48	6	0.0	1	6
49	11	0.0	1	10 1
50	2	0.0	1	2
51	6	0.0	1	6
52	2	0.0	1	2
53	5	0.0	1	5
54	4	0.0	1	4
55	3	0.0	1	3
56	2	0.0	1	2
57	4	0.0	1	4
58	2	0.0	1	2
59	1	0.0	1	1
61	3	0.0	1	3
62	1	0.0	1	1

RUN STATISTICS FOR INPUT FILE: WT_REP2_2.fastq.gz
=============================================
50000 sequences processed in total
The length threshold of paired-end sequences gets evaluated later on (in the validation step)

Validate paired-end files WT_REP2_1_trimmed.fq.gz and WT_REP2_2_trimmed.fq.gz
file_1: WT_REP2_1_trimmed.fq.gz, file_2: WT_REP2_2_trimmed.fq.gz


>>>>> Now validing the length of the 2 paired-end infiles: WT_REP2_1_trimmed.fq.gz and WT_REP2_2_trimmed.fq.gz <<<<<
Writing validated paired-end read 1 reads to WT_REP2_1_val_1.fq.gz
Writing validated paired-end read 2 reads to WT_REP2_2_val_2.fq.gz

Total number of sequences analysed: 50000

Number of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 240 (0.48%)


  >>> Now running FastQC on the validated data WT_REP2_1_val_1.fq.gz<<<

Started analysis of WT_REP2_1_val_1.fq.gz
Approx 5% complete for WT_REP2_1_val_1.fq.gz
Approx 10% complete for WT_REP2_1_val_1.fq.gz
Approx 15% complete for WT_REP2_1_val_1.fq.gz
Approx 20% complete for WT_REP2_1_val_1.fq.gz
Approx 25% complete for WT_REP2_1_val_1.fq.gz
Approx 30% complete for WT_REP2_1_val_1.fq.gz
Approx 35% complete for WT_REP2_1_val_1.fq.gz
Approx 40% complete for WT_REP2_1_val_1.fq.gz
Approx 45% complete for WT_REP2_1_val_1.fq.gz
Approx 50% complete for WT_REP2_1_val_1.fq.gz
Approx 55% complete for WT_REP2_1_val_1.fq.gz
Approx 60% complete for WT_REP2_1_val_1.fq.gz
Approx 65% complete for WT_REP2_1_val_1.fq.gz
Approx 70% complete for WT_REP2_1_val_1.fq.gz
Approx 75% complete for WT_REP2_1_val_1.fq.gz
Approx 80% complete for WT_REP2_1_val_1.fq.gz
Approx 85% complete for WT_REP2_1_val_1.fq.gz
Approx 90% complete for WT_REP2_1_val_1.fq.gz
Approx 95% complete for WT_REP2_1_val_1.fq.gz

  >>> Now running FastQC on the validated data WT_REP2_2_val_2.fq.gz<<<

Started analysis of WT_REP2_2_val_2.fq.gz
Approx 5% complete for WT_REP2_2_val_2.fq.gz
Approx 10% complete for WT_REP2_2_val_2.fq.gz
Approx 15% complete for WT_REP2_2_val_2.fq.gz
Approx 20% complete for WT_REP2_2_val_2.fq.gz
Approx 25% complete for WT_REP2_2_val_2.fq.gz
Approx 30% complete for WT_REP2_2_val_2.fq.gz
Approx 35% complete for WT_REP2_2_val_2.fq.gz
Approx 40% complete for WT_REP2_2_val_2.fq.gz
Approx 45% complete for WT_REP2_2_val_2.fq.gz
Approx 50% complete for WT_REP2_2_val_2.fq.gz
Approx 55% complete for WT_REP2_2_val_2.fq.gz
Approx 60% complete for WT_REP2_2_val_2.fq.gz
Approx 65% complete for WT_REP2_2_val_2.fq.gz
Approx 70% complete for WT_REP2_2_val_2.fq.gz
Approx 75% complete for WT_REP2_2_val_2.fq.gz
Approx 80% complete for WT_REP2_2_val_2.fq.gz
Approx 85% complete for WT_REP2_2_val_2.fq.gz
Approx 90% complete for WT_REP2_2_val_2.fq.gz
Approx 95% complete for WT_REP2_2_val_2.fq.gz
Deleting both intermediate output files WT_REP2_1_trimmed.fq.gz and WT_REP2_2_trimmed.fq.gz

====================================================================================================

